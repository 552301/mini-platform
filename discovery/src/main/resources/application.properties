
# 可以通过指定profile启动多个实例达到高可用。
# 如：java -jar discovery.jar --spring.profiles.active=discovery1
# 或在IDE中配置启动参数：如IDEA的Run/Debug Configurations中配置Environment/VM options参数为：-Dspring.profiles.active=discovery1

spring.application.name=discovery
#server.port=8761

spring.profiles.active=@profileActive@

### Apollo 配置 ###
app.id=${spring.application.name}
apollo.bootstrap.enabled=true
apollo.bootstrap.namespaces=application
apollo.meta=@apollo-meta-service-url@

#### Eureka Server 配置 ####

# 测试环境关闭自我保护机制，生产环境建议开启，
# Eureka Server会统计15分钟之内心跳失败的比例低于一定比例(默认85%)将触发保护机制，不剔除服务提供者，如果关闭服务注册中心将不可用的实例正确剔除
eureka.server.enable-self-preservation=false
# 开启自我保护的阈值，默认0.85
eureka.server.renewal-percent-threshold=0.5

# EurekaServer定时把数据从ReadWriteMap更新到ReadOnlyMap中，服务调用者再缓存到本地，三个缓存点都有延迟；
# EurekaServer刷新ReadOnlyMap的时间，默认0；
eureka.server.response-cache-update-interval-ms=30000

# EurekaServer中ReadWriteMap的过期时间（过期后会从Registry中重新读取注册信息，ReadWriteMap是Guava Cache，Registry是ConcurrentHashMap）。
# 默认180
eureka.server.response-cache-auto-expiration-in-seconds=180

# 启用EurekaServer主动失效检测间隔为30s，默认为0（不启用）
# 每个服务提供者会发送自己服务过期时间上去，EurekaServer会定时检查每个服务过期时间和上次心跳时间，
# 如果在过期时间内没有收到过任何一次心跳，同时没有处于保护模式下，则会将这个实例从ReadWriteMap中去掉。
eureka.server.eviction-interval-timer-in-ms=30000

#### Eureka Client 配置 ####
# 指定Eureka Server地址，需要设置hosts或Local DNS，确保defaultZone中的url能够连接
eureka.client.service-url.defaultZone=@eureka-service-url@

### Eureka 服务提供者配置 ###

# 表示将自身注册到eureka服务器
eureka.client.register-with-eureka=true

# 服务过期时间,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
# 注意：EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
# 默认90s
eureka.instance.lease-expiration-duration-in-seconds=15
# 服务刷新时间，每隔这个时间会主动心跳一次
# 默认30s
eureka.instance.lease-renewal-interval-in-seconds=5

eureka.instance.health-check-url-path=/actuator/health

### Eureka 服务调用者配置 ###
# 启用从EurekaServer上获取注册信息
eureka.client.fetch-registry=true

# 刷新本地缓存时间，默认30s
eureka.client.registry-fetch-interval-seconds=5

# Eureka客户端Ribbon刷新时间，默认30s
ribbon.ServerListRefreshInterval=5000

# 读取 Eureka Server 信息的超时时间，默认8秒
eureka.client.eureka-server-read-timeout-seconds=8
# 连接 Eureka Server 的超时时间，默认5秒
eureka.client.eureka-server-connect-timeout-seconds=5
# Eureka 服务端连接空闲关闭时间，默认30
eureka.client.eureka-connection-idle-timeout-seconds=30
# 从Eureka 客户端到所有Eureka服务端的连接总数，默认200
eureka.client.eureka-server-total-connections=200
# 从Eureka客户端到每个Eureka服务主机的连接总数，默认50
eureka.client.eureka-server-total-connections-per-host=50