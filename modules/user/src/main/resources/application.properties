server.port=8088
spring.application.name=user-service

spring.profiles.active=@profileActive@
eureka.client.service-url.defaultZone=@eureka-service-url@

### Apollo 配置 ###
app.id=${spring.application.name}
apollo.bootstrap.enabled=true
apollo.bootstrap.namespaces=application
apollo.meta=@apollo-meta-service-url@


spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=1
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.web-stat-filter.enabled=true
spring.datasource.web-stat-filter.url-pattern=/*
spring.datasource.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.stat-view-servlet.enabled= true
spring.datasource.stat-view-servlet.url-pattern= /druid/*
spring.datasource.stat-view-servlet.reset-enable= false
spring.datasource.stat-view-servlet.login-username= admin
spring.datasource.stat-view-servlet.login-password= admin
#白名单
spring.datasource.stat-view-servlet.allow= 127.0.0.1
#访问黑名单
#spring.datasource.stat-view-servlet.deny= 192.168.32.139

# 配置StatFilter
spring.datasource.filter.stat.db-type=mysql
spring.datasource.filter.stat.log-slow-sql=true
spring.datasource.filter.stat.slow-sql-millis=5000

# 配置WallFilter
spring.datasource.filter.wall.enabled=true
spring.datasource.filter.wall.db-type=mysql
spring.datasource.filter.wall.config.delete-allow=false
spring.datasource.filter.wall.config.drop-table-allow=false

#management.metrics.export.prometheus.enabled=true
#management.metrics.export.prometheus.step=1m
#management.metrics.export.prometheus.descriptions=true
#management.metrics.web.server.auto-time-requests=true
#management.endpoints.prometheus.id=springmetrics
# 参考：https://blog.csdn.net/alinyua/article/details/80009435
management.endpoints.web.exposure.include=info,health,prometheus,metrics,loggers
