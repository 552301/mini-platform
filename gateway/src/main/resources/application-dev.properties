server.port=8000
logging.level.org.apache=info
logging.level.com.netflix=info
logging.level.com.github.hiling=debug

#线程数默认为200，开发环境不需要这么高，节省内存
server.tomcat.max-threads=5

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=ALWAYS

# 基于service-id的动态路由策略，支持负载均衡，支持服务的自动注册与发现
# 当服务地址变化后无需手动配置，需后端服务支持自动注册；
ribbon.eureka.enabled=true

# user service
zuul.routes.user.path=/user/**
zuul.routes.user.service-id=user-service
#不过滤path,即zuul的地址/user/{id}，后端服务地址也为/user/{id}，如果是默认true，则过滤后，后端请求地址就成了/{id}
zuul.routes.user.strip-prefix=false

# item service
zuul.routes.item.path=/item/**
zuul.routes.item.service-id=item-service
zuul.routes.item.strip-prefix=false

# auth service
zuul.routes.auth.path=/auth/**
zuul.routes.auth.service-id=auth-service

#zuul默认不会将请求头传递下去，因此，通过设置sensitiveHeaders敏感信息头，让配置以外的其他请求头传递下去
#如sensitiveHeaders=cookie，表示只过滤cookie，其他的如Authorization等可以传递下去
zuul.routes.auth.sensitive-headers=cookie


# 设置远程URL跳转路由，zuul.routes.link.url无用，只是避免zuul路由报错
zuul.routes.link.path = /link/**
zuul.routes.link.service-id = link
zuul.routes.link.url=http://localhost:8000

# 设置远程URL地址，用Map实现，最后一段为map的key，也是link后的路径，值为map的value，也是要跳转的远程URL
# 如：当path是/link/hiling时，跳转到https://github.com/hiling
link.redirect.hiling=https://github.com/hiling
link.redirect.mini=https://github.com/hiling/mini-platform

# OAuth忽略验证的地址，多个用逗号分隔，需要以"/"开头；
# 下面配置可忽略 /auth/token**和/link/**地址；
auth.ignore.path-prefix=/auth/token,/link/


# Redis配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.database=3