server.port=8030
spring.application.name=oauth-service

# \u5EFA\u8BAE\u5C06\u9700\u8981\u4FEE\u6539\u7684\u914D\u7F6E\u5199\u5230\u5BF9\u5E94\u73AF\u5883\u7684Profile\u6587\u4EF6\u4E2D\uFF0C\u683C\u5F0F\uFF1Aapplication-{profile}.properties\uFF0C\u5982\uFF1Aapplication-dev.properties\u3001application-prd.properties
# \u5728\u542F\u52A8\u65F6\u4F7F\u7528spring.profiles.active={profile}\u53C2\u6570\u6307\u5B9Aprofile\u5373\u53EF\uFF0C\u5982\uFF1Ajava -jar discovery.jar --spring.profiles.active=dev
# \u6216\u8005\u5728IDE\u4E2D\u914D\u7F6E\u542F\u52A8\u53C2\u6570\uFF1A\u5982IDEA\u7684Run/Debug Configurations\u4E2D\u914D\u7F6EEnvironment/VM options\u53C2\u6570\u4E3A\uFF1A-Dspring.profiles.active=dev
# Spring Boot\u4F1A\u5148\u52A0\u8F7D\u9ED8\u8BA4\u7684\u914D\u7F6E\u6587\u4EF6\uFF0C\u7136\u540E\u4F7F\u7528\u6307\u5B9A\u7684profile\u4E2D\u7684\u914D\u7F6E\u53BB\u8986\u76D6\u9ED8\u8BA4\u914D\u7F6E
# SpringBoot\u5E38\u7528\u914D\u7F6E\u8BFB\u53D6\u4F18\u5148\u7EA7\uFF1A\u547D\u4EE4\u884C\u53C2\u6570\u3001Java\u7CFB\u7EDF\u53C2\u6570\u3001jar\u5916\u90E8\u914D\u7F6E(\u5E38\u7528\u4E8E\u751F\u4EA7\u73AF\u5883\u654F\u611F\u914D\u7F6E\uFF0C\u4F7F\u7528spring.config.location\u6307\u5B9A)\u3001jar\u5185\u90E8profile\u914D\u7F6E\uFF0Cjar\u5185\u90E8\u9ED8\u8BA4\u914D\u7F6E
# \u793A\u4F8B\uFF1A\u5F53\u8981\u4F7F\u7528\u4E0D\u540C\u7684\u7AEF\u53E3\u542F\u52A8\u591A\u4E2A\u5B9E\u4F8B\u65F6\uFF0C\u53EF\u901A\u8FC7\u547D\u4EE4\u884C\u53C2\u6570\u5982-Dserver.port=8089\u542F\u52A8\u3002
# spring.profiles.active=dev

### Apollo \u914D\u7F6E ###
app.id=${spring.application.name}
apollo.bootstrap.enabled=true
apollo.bootstrap.namespaces=application
apollo.meta=http://localhost:8761

eureka.client.service-url.default-zone=http://discovery1:8761/eureka/,http://discovery2:8762/eureka/,http://discovery3:8763/eureka/

# OAuth\u6570\u636E\u5E93\u5730\u5740\u914D\u7F6E
spring.datasource.oauth.jdbc-url=jdbc:mysql://127.0.0.1:3306/mini_oauth_dev?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.oauth.username=root
spring.datasource.oauth.password=root
spring.datasource.oauth.driver-class-name=com.mysql.jdbc.Driver

# Client\u6570\u636E\u5E93\u5730\u5740\u914D\u7F6E
spring.datasource.client.jdbc-url=jdbc:mysql://127.0.0.1:3306/mini_oauth_dev?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.client.username=root
spring.datasource.client.password=root
spring.datasource.client.driver-class-name=com.mysql.jdbc.Driver

# User\u6570\u636E\u5E93\u5730\u5740\u914D\u7F6E
spring.datasource.user.jdbc-url=jdbc:mysql://127.0.0.1:3306/mini_api_dev?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.user.username=root
spring.datasource.user.password=root
spring.datasource.user.driver-class-name=com.mysql.jdbc.Driver
# \u8FDE\u63A5\u53EA\u8BFB\u6570\u636E\u5E93\u65F6\u914D\u7F6E\u4E3Atrue\uFF0C \u4FDD\u8BC1\u5B89\u5168
spring.datasource.user.readOnly=true
#\u7B49\u5F85\u8FDE\u63A5\u6C60\u5206\u914D\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u957F\u8FD8\u6CA1\u53EF\u7528\u7684\u8FDE\u63A5\u5219\u53D1\u751FSQLException\uFF0C \u7F3A\u7701:30\u79D2
spring.datasource.user.connectionTimeout=30000
# \u4E00\u4E2A\u8FDE\u63A5idle\u72B6\u6001\u7684\u6700\u5927\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u5219\u88AB\u91CA\u653E\uFF08retired\uFF09\uFF0C\u7F3A\u7701:10\u5206\u949F
spring.datasource.user.idleTimeout=600000
# \u4E00\u4E2A\u8FDE\u63A5\u7684\u751F\u547D\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u800C\u4E14\u6CA1\u88AB\u4F7F\u7528\u5219\u88AB\u91CA\u653E\uFF08retired\uFF09\uFF0C\u7F3A\u7701:30\u5206\u949F\uFF0C\u5EFA\u8BAE\u8BBE\u7F6E\u6BD4\u6570\u636E\u5E93\u8D85\u65F6\u65F6\u957F\u5C1130\u79D2\uFF0C
# \u53C2\u8003MySQL wait_timeout\u53C2\u6570\uFF08show variables like '%timeout%';\uFF09
spring.datasource.user.maxLifetime=1800000
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u8FDE\u63A5\u6570\u3002\u7F3A\u7701\u503C\uFF1A10\uFF1B\u63A8\u8350\u7684\u516C\u5F0F\uFF1A((core_count * 2) + effective_spindle_count)
spring.datasource.user.maximumPoolSize=15

### Redis \u914D\u7F6E ###
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=root
spring.redis.database=0

# spring.redis.timeout=60s
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.lettuce.pool.max-active=24
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5
spring.redis.lettuce.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09
spring.redis.lettuce.pool.max-wait=30s
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5
spring.redis.lettuce.pool.min-idle=4
spring.redis.lettuce.shutdown-timeout=10s

# \u626B\u63CF mapper.xml
mybatis-plus.mapper-locations=classpath:/mapper/*Mapper.xml

###OAuth\u914D\u7F6E###
##AccessToken##
#accessToken\u8FC7\u671F\u65F6\u95F4(\u79D2)\u9ED8\u8BA42\u5C0F\u65F6(\u6BCF\u6B21\u751F\u6210accessToken\u65F6\u91CD\u65B0\u751F\u6210jwtToken\uFF0C\u56E0\u6B64\uFF0CjwtToken\u8FC7\u671F\u65F6\u95F4\u4E0EaccessToken\u8FC7\u671F\u65F6\u95F4\u76F8\u540C)
oauth.access-token.expiration=3600

#\u6BCF\u6267\u884C\u4E00\u6B21\u6E05\u9664\u8FC7\u671FToken\u540Esleep\u7684\u65F6\u95F4\uFF08\u79D2\uFF09\uFF0C\u9ED8\u8BA41\u79D2
oauth.access-token.remove-expired.loop-wait=10
#\u6BCF\u6B21\u79FB\u9664\u8FC7\u671F\u6570\u636E\u65F6\uFF0C\u4FDD\u7559\u6700\u8FD1\u51E0\u79D2\u7684\u6570\u636E\uFF0C\u9ED8\u8BA45\u79D2,\uFF0C\u907F\u514D\u5F53\u5BA2\u6237\u7AEF\u540C\u65F6\u53D1\u8D77\u83B7\u53D6token\u548C\u5237\u65B0token\u7684\u8BF7\u6C42\u65F6\uFF0C\u5148\u6267\u884C\u4E86\u5237\u65B0token\uFF0C\u5BFC\u81F4\u83B7\u53D6token\u5931\u8D25\u3002
oauth.access-token.remove-expired.reserve-time=5
#\u6BCF\u6B21\u79FB\u9664\u7684\u6700\u591A\u5BA2\u6237&\u7528\u6237\u6570\uFF0C\u907F\u514D\u5355\u6B21\u5904\u7406\u6570\u636E\u8FC7\u591A\u5BFC\u81F4\u6570\u636E\u5E93\u6027\u80FD\u538B\u529B\uFF0C\u9ED8\u8BA41000\u6761
oauth.access-token.remove-expired.max-remove-count=1000

##RefreshToken##
#refreshToken\u8FC7\u671F\u8BBE\u7F6E\uFF0C\u5355\u4F4D\u4E3A\u79D2
#\u573A\u666F\u793A\u4F8B\uFF1A
# 1\u3001\u6ED1\u52A8\u8FC7\u671F=0\uFF0C\u7EDD\u5BF9\u8FC7\u671F=0\uFF0C\u8868\u793A\u6C38\u4E0D\u8FC7\u671F\u3002
# 2\u3001\u6ED1\u52A8\u8FC7\u671F=1\u5929\uFF0C\u7EDD\u5BF9\u8FC7\u671F=0\u5929\uFF0C\u8868\u793A1\u5929\u5185\u6CA1\u6709\u8C03\u7528\u540E\u8FC7\u671F\u3002
# 3\u3001\u6ED1\u52A8\u8FC7\u671F=0\uFF0C\u7EDD\u5BF9\u8FC7\u671F=1\u5929\uFF0C\u8868\u793A\u4E0D\u7BA1\u662F\u5426\u6709\u8C03\u7528\uFF0C\u603B\u662F1\u5929\u540E\u8FC7\u671F\u3002
# 4\u3001\u6ED1\u52A8\u8FC7\u671F=1\u5929\uFF0C\u7EDD\u5BF9\u8FC7\u671F=7\u5929\uFF0C\u8868\u793A1\u5929\u5185\u6CA1\u6709\u8C03\u7528\u540E\u8FC7\u671F\uFF0C\u6700\u591A\u7F13\u5B587\u5929\u3002
#refreshToken\u6ED1\u52A8\u8FC7\u671F\u65F6\u95F4(\u79D2) \u9ED8\u8BA41\u5929
oauth.refresh-token.sliding-expiration=7200
#refreshToken\u7EDD\u5BF9\u8FC7\u671F\u65F6\u95F4(\u79D2) \u9ED8\u8BA47\u5929
oauth.refresh-token.absolute-expiration=86400

oauth.refresh-token.remove-expired.loop-wait=10
oauth.refresh-token.remove-expired.reserve-time=5
oauth.refresh-token.remove-expired.max-remove-count=1000

# \u5F53OAuth\u7684grant_type=password\u65F6\uFF0C\u9A8C\u8BC1username\u3001password\u7684\u65B9\u5F0F\uFF0C\u652F\u6301\uFF1Aurl\u548Csql\uFF1B
# \u5F53\u4E3Aurl\u65F6\uFF0C\u4F7F\u7528\u5916\u90E8\u670D\u52A1\u9A8C\u8BC1\u7528\u6237\u540D\u5BC6\u7801\u7684\u6B63\u786E\u6027\uFF0C\u9700\u8981\u914D\u7F6Eurl\u5730\u5740\uFF1B
# \u5F53\u4E3Asql\u65F6\uFF0C\u76F4\u63A5\u4F7F\u7528\u914D\u7F6E\u7684sql\u811A\u672C\u9A8C\u8BC1\uFF0C\u9700\u540C\u65F6\u914D\u7F6Esql\u811A\u672C\u548C\u6570\u636E\u5E93\u94FE\u63A5\u5B57\u7B26\u4E32
user.login.type=sql

# \u9A8C\u8BC1\u7528\u6237\u540D\u5BC6\u7801\u7684\u670D\u52A1\u5730\u5740\uFF0C\u53C2\u6570\u652F\u6301{username}\u548C{password}
user.login.url=http://localhost:8088/user?username={username}&password={password}

# \u9A8C\u8BC1\u7528\u6237\u540D\u5BC6\u7801\u7684sql\u811A\u672C
# \u652F\u6301\u7684\u5217\u4E3A\uFF1AuserId, username, password, scope\uFF0C\u5982\u679CDB\u4E2D\u7684\u5217\u8868\u540D\u4E0D\u4E00\u81F4\u65F6\uFF0C\u8BF7\u4F7F\u7528as\u91CD\u547D\u540D\uFF0C\u5982\uFF1Aid as userId
# \u67E5\u8BE2\u53C2\u6570\u4E3A\uFF1A#{username}\u548C{password}\uFF0C\u4F46Properties\u4E2D\u201C#\u201D\u53F7\u4E3A\u7279\u6B8A\u5B57\u7B26\uFF0C\u7A0B\u5E8F\u4E2D\u4F1A\u81EA\u52A8\u7ED9\u201C{\u201D\u524D\u6DFB\u52A0\u201C#\u201D\u53F7\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u8F93\u5165{username}\u5373\u53EF
user.login.sql=select id as userId,username, password from user where username={username} and password={password}

# scope\u6743\u9650\u914D\u7F6E
oauth.scope.client=oauth-client


