<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mnsoft.oauth.mapper.RefreshTokenMapper">


    <select id="getByRefreshToken" resultType="com.mnsoft.oauth.model.RefreshToken">
        select
            id,
            `client_id` as clientId,
            `user_id` as userId,
            `refresh_token` as refreshToken,
            `expires_in` as expiresIn,
            `create_time` as createTime,
            `last_used_time` as lastUsedTime
        from oauth_refresh_token
        where refresh_token = #{refreshToken}
    </select>

    <select id="getRevokeRefreshToken" resultType="String">
        <foreach collection="list" item="item" index="index" separator="union all">
            select refresh_token as refreshToken
            from oauth_refresh_token
            where client_id = #{item.clientId}
            <if test="item.userId != null">
                and user_id = #{item.userId}
            </if>
            and create_time <![CDATA[ < ]]> #{item.time}
        </foreach>
    </select>

    <insert id="insert" parameterType="com.mnsoft.oauth.model.RefreshToken" keyProperty="id">
        insert into oauth_refresh_token
        (
           `client_id`,
            `user_id`,
            `refresh_token`,
            `expires_in`,
            `create_time`,
            `last_used_time`
        )
        values
        (
            #{clientId},
            #{userId},
            #{refreshToken},
            #{expiresIn},
            #{createTime},
            #{lastUsedTime}
        )
    </insert>

    <update id="updateLastUsedTimeById">
        update oauth_refresh_token set last_used_time = #{lastUsedTime} where id = #{id}
    </update>

    <delete id="batchDeleteByRefreshToken">
        delete from oauth_refresh_token where refresh_token in
        <foreach item="refreshToken" index="index" collection="refreshTokenList" open="(" separator="," close=")">
            #{refreshToken}
        </foreach>
    </delete>

    <delete id="deleteExpiredRefreshToken">
        delete from oauth_refresh_token
        where create_time <![CDATA[ < ]]> date_sub(now(), INTERVAL expires_in second)
    </delete>
</mapper>