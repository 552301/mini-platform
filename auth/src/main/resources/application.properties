server.port=8081
spring.application.name=auth-service

apollo.bootstrap.enabled=true
apollo.bootstrap.namespaces=application,TEST1.apollo

spring.profiles.active=dev

# spring.redis.timeout=60s
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=8
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=30s
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=4
spring.redis.lettuce.shutdown-timeout=10s

# 扫描 mapper.xml
mybatis-plus.mapper-locations=classpath:/mapper/*Mapper.xml

###OAuth配置###
##AccessToken##
#accessToken过期时间(秒)默认2小时(每次生成accessToken时重新生成jwtToken，因此，jwtToken过期时间与accessToken过期时间相同)
oauth.access-token.expiration=3600

#每执行一次清除过期Token后sleep的时间（秒），默认1秒
oauth.access-token.remove-expired.loop-wait=10
#每次移除过期数据时，保留最近几秒的数据，默认5秒,，避免当客户端同时发起获取token和刷新token的请求时，先执行了刷新token，导致获取token失败。
oauth.access-token.remove-expired.reserve-time=5
#每次移除的最多客户&用户数，避免单次处理数据过多导致数据库性能压力，默认1000条
oauth.access-token.remove-expired.max-remove-count=1000

##RefreshToken##

#refreshToken过期设置，单位为秒
#场景示例：
# 1、滑动过期=0，绝对过期=0，表示永不过期。
# 2、滑动过期=1天，绝对过期=0天，表示1天内没有调用后过期。
# 3、滑动过期=0，绝对过期=1天，表示不管是否有调用，总是1天后过期。
# 4、滑动过期=1天，绝对过期=7天，表示1天内没有调用后过期，最多缓存7天。
#refreshToken滑动过期时间(秒) 默认1天
oauth.refresh-token.sliding-expiration=7200
#refreshToken绝对过期时间(秒) 默认7天
oauth.refresh-token.absolute-expiration=86400

oauth.refresh-token.remove-expired.loop-wait=10
oauth.refresh-token.remove-expired.reserve-time=5
oauth.refresh-token.remove-expired.max-remove-count=1000